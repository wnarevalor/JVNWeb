Encabezado Titulo 'text' FinTitulo FinEncabezado
Cuerpo
    'this is a text'
    EntradaDeTexto
        (clases: "ssdasdasd",
         estilos: ancho es 23 pixeles 
                      y color es #rojo 34 verde 42 azul 43
                      y color es rojo
                      y alto es 23 pixeles
                      y borde es 23 pixeles 'solid' #rojo 23 verde 12 azul 2565757
                      y opacidad es 0.6
                      y tamano es 32 pixeles
                      y familia es 'Papyrus'
                      y cursiva y negrilla y subrayado y tachado)
        FinEntradaDeTexto
FinCuerpo
Codigo
    variable _code = `codigo`
    lista _arreglo = [1,2,3]
    objeto _carro tiene _techo: `rojo`, _ruedas: `amarillas`, _numeroPuertas : 2 , _colores : [`rojo`,`negro`, `azul`] fin_objeto
    objeto _casa tiene _entrada : `azul`, :objeto _cuarto tiene _puertas : 2 fin_objeto , _garage : `peque` fin_objeto
    lista _arregloObjetos = [`objeto`, _n, _n._e, _n[0], _n[`carde`], _n[1]._val._ee, objeto tiene _carro: 2 fin_objeto]

    variable _codigo = 3, _regla = `a`, _arreglo = 25

    asignarElemento (.clase) a _parrafo


    asignarElemento (Parrafo) a _p

    _parrafo nuevoContenido : _arreglo[0] , `es un numero` , `<p> This is a paragraph </p>`

    _arreglo = [];
    _func(230012, [123,1]);
    _k = !(false)
    variable _function = _suma(2,5) + 500
    si (_booleano) entonces
        lista _discos = [12,4,24]
    fin_si
    para(_i=3;_i<10;29)hacer
        si(_i>5)entonces
            imprimir(`log`)fin_imprimir
        fin_si
    fin_para
    objeto _casa tiene _puertas: 2, _ventanas : 5 fin_objeto
    para (_cosa en _casa) hacer
        imprimir _casa[_cosa] fin_imprimir
    fin_para
    variable _text = `texto`
    para (_letra de _texto) hacer
        imprimir _letra fin_imprimir
    fin_para
    mientras (true) hacer
        romper;
    fin_mientras
    hacer romper; mientras (true)
    variable _a = 1
    seleccionar (_a) entre
        caso 1:
            imprimir `imprimir nada` fin_imprimir
        defecto:
            imprimir `defecto` fin_imprimir
    fin_seleccionar
    funcion _hacerAlgo () hace
        retornar _a;
    fin_funcion
FinCodigo